@page "/SampleData"
@inject ICategoryData categoryData
@inject IStatusData statusData

<h3>Sample Data</h3>

@if (categoriesCreated)
{
    <h4>Categories have been created</h4>
}
else
{
    <button class="btn btn-primary" @onclick="CreateCategories">Create Categories</button>
}

@if (statusesCreated)
{
    <h4>Statuses have been created</h4>
}
else
{
    <button class="btn btn-primary" @onclick="CreateStatuses">Create Statuses</button>
}

@code {
    private bool categoriesCreated = false;
    private bool statusesCreated = false;

    private async Task CreateCategories()
    {
        var categories = await categoryData.GetAllCategories();

        if (categories?.Any() == true)
        {
            return;
        }

        CategoryModel category = new()
            {
                CategoryName = "Courses",
                CategoryDescription = "Full paid courses."
            };

        await categoryData.CreateCategory(category);

        category = new()
            {
                CategoryName = "Dev Questions",
                CategoryDescription = "Advice on being a developer."
            };

        await categoryData.CreateCategory(category);

        category = new()
            {
                CategoryName = "In-Depth Tutorials",
                CategoryDescription = "a deep-dive video on how to use a topic."
            };

        await categoryData.CreateCategory(category);

        category = new()
            {
                CategoryName = "10-Minute Training",
                CategoryDescription = "A quick \"How do I use this?\" video."
            };

        await categoryData.CreateCategory(category);

        category = new()
            {
                CategoryName = "Other",
                CategoryDescription = "Not sure what category this fits in."
            };

        await categoryData.CreateCategory(category);

        categoriesCreated = true;
    }

    private async Task CreateStatuses()
    {
        var statuses = await statusData.GetAllStatuses();

        if (statuses?.Any() == true)
        {
            return;
        }

        StatusModel status = new()
            {
                StautsName = "Completed",
                StautsDescription = "The suggestion was accepted and the corresponding item was created."
            };

        await statusData.CreateStatus(status);

        status = new()
            {
                StautsName = "Watching",
                StautsDescription = "The suggestion was interesting. We are watching to see how much interest there is in it."
            };

        await statusData.CreateStatus(status);

        status = new()
            {
                StautsName = "Upcoming",
                StautsDescription = "The suggestion was accepted and it will be released soon."
            };

        await statusData.CreateStatus(status);

        status = new()
            {
                StautsName = "Dismissed",
                StautsDescription = "The suggestion was not something that we are going to undertake."
            };

        await statusData.CreateStatus(status);

        statusesCreated = true;
    }
}
